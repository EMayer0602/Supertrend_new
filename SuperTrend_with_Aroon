def calculate_equity_curve(trades, btc_data, trade_type, initial_capital):
    """
    Calculate a continuous equity curve with proper behavior when not invested.
    """
    equity_curve = []
    capital = initial_capital
    invested = False  # Track whether a trade is currently open
    entry_price = None  # Track the entry price of the trade
    shares = None  # Track the number of shares purchased

    # Convert 'Buy Date' and 'Sell Date' to datetime
    trades['Buy Date'] = pd.to_datetime(trades['Buy Date'])
    trades['Sell Date'] = pd.to_datetime(trades['Sell Date'])

    # Normalize both Buy Dates and Sell Dates
    trades.set_index('Buy Date', inplace=True)
    trades.index = trades.index.normalize()  # Normalize Buy Dates
    trades['Sell Date'] = trades['Sell Date'].dt.normalize()  # Normalize Sell Dates
    btc_data.index = btc_data.index.normalize()  # Normalize BTC data index

    for date in btc_data.index:
        close = btc_data.loc[date, 'Close']

        # Update equity curve during an open trade
        if invested:
            equity = shares * close  # Value of the trade based on current price
            equity_curve.append(equity)
        else:
            # Flat behavior when not invested
            equity_curve.append(capital)

        # Check if a trade starts on this date (Buy Date)
        if date in trades.index:
            trade = trades.loc[date]
            if trade['Type'] == trade_type and not invested:
                # Start a trade
                invested = True
                entry_price = close
                shares = capital / entry_price  # Calculate number of shares
                print(f"Trade Started: {trade_type} on {date}, Entry Price: {entry_price}, Shares: {shares}")

        # Check if a trade ends on this date (Sell Date)
        if date in trades['Sell Date'].values:
            trade = trades[trades['Sell Date'] == date].iloc[0]
            if trade['Type'] == trade_type and invested:
                # End the trade
                invested = False
                capital = shares * close  # Update capital after selling
                entry_price = None
                shares = None
                print(f"Trade Ended: {trade_type} on {date}, Exit Price: {close}, Capital: {capital}")

    return pd.Series(equity_curve, index=btc_data.index)
